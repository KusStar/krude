[versions]
accompanistPermissions = "0.19.0"
activityCompose = "1.9.0"
appiconloader = "1.5.0"
barcodeScanning = "17.2.0"
browser = "1.8.0"
cameraMlkitVision = "1.4.0-beta02"
cameraView = "1.3.4"
cascadeCompose = "2.3.0"
coilCompose = "2.4.0"
comGoogleDevtoolsKspGradlePlugin = "2.0.0-1.0.21"
composeBom = "2024.06.00"
composeCalendar = "2.4.0"
composeCompilerGradlePlugin = "2.0.0"
composePreference = "1.0.0"
composeSettingsUiTiles = "2.1.0"
composeShimmer = "1.0.5"
composeWheelPicker = "1.0.0-beta05"
coreSplashscreen = "1.0.1"
datastorePreferences = "1.1.1"
fuzzywuzzy = "1.4.0"
gradle = "8.9.1"
gradleLicensePlugin = "0.9.7"
gson = "2.10.1"
hiddenapibypass = "4.3"
kotlinGradlePlugin = "2.0.0"
kotlinStdlib = "2.0.0"
lazycolumnscrollbar = "2.1.0"
lifecycleRuntimeCompose = "2.8.3"
roomCompiler = "2.6.1"
roomRuntime = "2.6.1"
shadowhook = "1.0.10"
shizukuApi = "13.1.5"
timber = "5.0.1"
tinypinyin = "2.0.3.RELEASE"
wytrace = "1.0.1"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraView" }
androidx-camera-mlkit-vision = { module = "androidx.camera:camera-mlkit-vision", version.ref = "cameraMlkitVision" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeCompose" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeCompose" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCompiler" }
appiconloader = { module = "me.zhanghai.android.appiconloader:appiconloader", version.ref = "appiconloader" }
barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcodeScanning" }
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraView" }
camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraView" }
cascade-compose = { module = "me.saket.cascade:cascade-compose", version.ref = "cascadeCompose" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
com-google-devtools-ksp-gradle-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "comGoogleDevtoolsKspGradlePlugin" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-calendar = { module = "com.kizitonwose.calendar:compose", version.ref = "composeCalendar" }
compose-compiler-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "composeCompilerGradlePlugin" }
compose-preference = { module = "me.zhanghai.compose.preference:library", version.ref = "composePreference" }
compose-runtime-android = { module = "androidx.compose.runtime:runtime-android" }
compose-settings-ui-tiles = { module = "com.github.alorma.compose-settings:ui-tiles", version.ref = "composeSettingsUiTiles" }
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-wheel-picker = { module = "com.github.zj565061763:compose-wheel-picker", version.ref = "composeWheelPicker" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
gradle-license-plugin = { module = "com.jaredsburrows:gradle-license-plugin", version.ref = "gradleLicensePlugin" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hiddenapibypass = { module = "org.lsposed.hiddenapibypass:hiddenapibypass", version.ref = "hiddenapibypass" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinStdlib" }
lazycolumnscrollbar = { module = "com.github.nanihadesuka:LazyColumnScrollbar", version.ref = "lazycolumnscrollbar" }
material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
material3 = { module = "androidx.compose.material3:material3" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
shadowhook = { module = "com.bytedance.android:shadowhook", version.ref = "shadowhook" }
shizuku-api = { module = "dev.rikka.shizuku:api", version.ref = "shizukuApi" }
shizuku-provider = { module = "dev.rikka.shizuku:provider", version.ref = "shizukuApi" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
tinypinyin = { module = "io.github.biezhi:TinyPinyin", version.ref = "tinypinyin" }
wytrace = { module = "com.github.KusStar.wytrace:wytrace", version.ref = "wytrace" }
wytrace-no-impl = { module = "com.github.KusStar.wytrace:wytrace-no-impl", version.ref = "wytrace" }

[plugins]
